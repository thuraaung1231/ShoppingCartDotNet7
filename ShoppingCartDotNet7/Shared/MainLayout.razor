@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using MudBlazor
@inject ProtectedSessionStorage protectedSessionStore
@using Newtonsoft.Json
@using ShoppingCartDotNet7.Components

<PageTitle>ShoppingCartDotNet7</PageTitle>
<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<div class="page">

    @if (userModel != null && (userModel.RoleId == 0 || userModel.RoleId == 1))
    {
        <div class="sidebar">
            <NavMenu />
        </div>
    }

    <main class="bg-secondary vh-100">
        <MudLayout>
            @{
                if (userModel.RoleId == 0)
                {
                    <HeaderComponent ActionName1="CreateAdmin" ActionName2="Logout" Icon1="fa-solid fa-plus" Icon2="fa-solid fa-right-from-bracket" Icon3="fa-solid fa-list" ActionName3="AdminList" Color1="Color.Warning"></HeaderComponent>
                }
                else if(userModel.RoleId==1)
                {
                    <HeaderComponent ActionName1="@userModel.Name" ActionName2="Logout" Icon2="fa-solid fa-right-from-bracket"></HeaderComponent>
                }else if (userModel.RoleId == 2)
                {
                     <HeaderComponent ActionName1="@userModel.Name" ActionName2="Logout" Icon2="fa-solid fa-right-from-bracket" ></HeaderComponent>
                }
                else
                {
                    <HeaderComponent ActionName1="Login" ActionName2="Register" Icon2="fa-solid fa-plus" Icon1="fa-solid fa-right-from-bracket"></HeaderComponent>
                    
                }
            }
            
            <MudMainContent Class="container mx-auto">
                @Body
            </MudMainContent>
        </MudLayout>


    </main>
</div>
@code {
    UserModel userModel = new UserModel();
    public string searchString1 = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadUserData();
        }
        else
        {
            await UpdateUserData();
        }
        
    }
    private async Task LoadUserData()
    {
        var result = await protectedSessionStore.GetAsync<UserModel>("UserRole");
        if (result.Success)
        {
            userModel = result.Value;
        }
        else
        {
            userModel.RoleId = 4;
        }
        StateHasChanged();
    }

    private async Task UpdateUserData()
    {
        var result = await protectedSessionStore.GetAsync<UserModel>("UserRole");
        if (result.Success)
        {
            userModel = result.Value;
        }
        else
        {
            userModel.RoleId = 4;
        }
        StateHasChanged();
    }

}

